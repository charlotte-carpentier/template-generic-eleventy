{# ┌─────────────────────────────────────────────────────────┐
   │ MOLECULE › Error Fragment                               │
   │ Error page animated fragments (404, 500, maintenance)   │
   └─────────────────────────────────────────────────────────┘ #}

{#
  Props:
    - options.name (string): Error fragment identifier
    - options.datas (array): Error fragment configuration data
    - options.iconDatas (array): Icon atom data (for icon variant)
    - options.headingDatas (array): Heading atom data (for text variant)

  Usage — Summon HAT Components Wisely:
    {% from "02-molecules/error-fragment.njk" import renderErrorFragment %}

    {{ renderErrorFragment({
        name: "frag4041",
        datas: molecules["error-fragment"].errorFragments,
        iconDatas: atoms.icon.icons,
        headingDatas: atoms.heading.headings
    }) }}

  @created 2025-01-15
#}

{% from "01-atoms/icon.njk" import renderIcon %}
{% from "01-atoms/heading.njk" import renderHeading %}

{% macro renderErrorFragment(options) %}
  {# Validate required props #}
  {% if not options.datas %}
    <span class="error" role="alert">Error: Missing required prop (datas)</span>
  {% elif not options.name %}
    <span class="error" role="alert">Error: Missing required prop (name)</span>
  {% else %}
    {# Find error fragment using universal filter #}
    {% set fragmentData = options.datas | findByName(options.name) %}

    {# Render or error #}
    {% if not fragmentData %}
      <span class="error" role="alert">Error fragment not found: {{ options.name }}</span>
    {% else %}
      <div
        data-error-fragment-name="{{ fragmentData.name }}"
        data-error-fragment-type="error-fragment"
        data-error-fragment-variant="{{ fragmentData.variant }}"
      >
        {# Icon variant #}
        {% if fragmentData.variant == "icon" and fragmentData.iconName and options.iconDatas %}
          <div data-error-fragment-content="icon">
            {{ renderIcon({
                name: fragmentData.iconName,
                datas: options.iconDatas
            }) }}
          </div>

        {# Text variant #}
        {% elif fragmentData.variant == "text" and fragmentData.textTypographyName and options.headingDatas %}
          <div data-error-fragment-content="text">
            {{ renderHeading({
                name: fragmentData.textTypographyName,
                datas: options.headingDatas
            }) }}
          </div>

        {# Unsupported variant #}
        {% else %}
          <span class="error" role="alert">Unsupported error fragment variant: {{ fragmentData.variant }}</span>
        {% endif %}
      </div>
    {% endif %}
  {% endif %}
{% endmacro %}

{#
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
May your bugs be forever exiled to the shadow realm ✦
Charlotte Carpentier · 2025
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#}
