{# ┌─────────────────────────────────────────────────────────┐
   │ MOLECULE › Block Drag and Drop                          │
   │ File upload with drag and drop support                  │
   └─────────────────────────────────────────────────────────┘ #}

{#
  Props:
    - options.name (string): Block drag and drop identifier
    - options.datas (array): Block drag and drop configuration data
    - options.headingDatas (array): Heading atom data
    - options.iconDatas (array): Icon atom data
    - options.buttonDatas (array): Button atom data

  Usage — Summon HAT Components Wisely:
    {% from "02-molecules/block-drag-and-drop.njk" import renderBlockDragAndDrop %}

    {{ renderBlockDragAndDrop({
        name: "demoDragDrop1",
        datas: molecules["block-drag-and-drop"].blockDragAndDrops,
        headingDatas: atoms.heading.headings,
        iconDatas: atoms.icon.icons,
        buttonDatas: atoms.button.buttons
    }) }}

  @created 2025-01-15
#}

{% from "01-atoms/heading.njk" import renderHeading %}
{% from "01-atoms/icon.njk" import renderIcon %}
{% from "01-atoms/button.njk" import renderButton %}

{% macro renderBlockDragAndDrop(options) %}
  {# Validate required props #}
  {% if not options.datas %}
    <span class="error" role="alert">Error: Missing required prop (datas)</span>
  {% elif not options.name %}
    <span class="error" role="alert">Error: Missing required prop (name)</span>
  {% else %}
    {# Find block drag and drop using universal filter #}
    {% set blockData = options.datas | findByName(options.name) %}

    {# Render or error #}
    {% if not blockData %}
      <span class="error" role="alert">Block drag and drop not found: {{ options.name }}</span>
    {% else %}
      <div
        data-drag-drop-name="{{ blockData.name }}"
        data-drag-drop-type="block-drag-and-drop"
        data-drag-drop-variant="{{ blockData.variant }}"
      >
        {# Heading #}
        {{ renderHeading({
            name: blockData.headingName,
            datas: options.headingDatas
        }) }}

        {# Dropzone area #}
        <div
          data-drag-drop-zone="true"
          tabindex="0"
          role="button"
          aria-label="Upload file by dropping it here or by clicking"
        >
          {# Icon #}
          {{ renderIcon({
              name: blockData.iconName,
              datas: options.iconDatas
          }) }}

          {# Dropzone text #}
          <p data-drag-drop-text="true">
            {{ blockData.dropzoneText }}
          </p>
        </div>

        {# Error message (if present) #}
        {% if blockData.errorMessage %}
          <div
            data-drag-drop-error="true"
            role="alert"
          >
            <p>{{ blockData.errorMessage }}</p>
            {% if blockData.dismissible %}
              <button
                type="button"
                data-drag-drop-dismiss="true"
                aria-label="Dismiss error message"
              >
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                </svg>
              </button>
            {% endif %}
          </div>
        {% endif %}

        {# Separator #}
        <div data-drag-drop-separator="true">
          <div data-separator-line="true"></div>
          <span data-separator-text="true">{{ blockData.separator }}</span>
          <div data-separator-line="true"></div>
        </div>

        {# Browse button #}
        {{ renderButton({
            name: blockData.buttonName,
            datas: options.buttonDatas,
            disabled: blockData.variant == "loading"
        }) }}

        {# File info #}
        <div data-drag-drop-info="true">
          <p>
            <span>Supported formats:</span>
            <span>{{ blockData.supportedFormats }}</span>
          </p>
          <p>
            <span>Maximum file size:</span>
            <span>{{ blockData.maxFileSize }}</span>
          </p>
        </div>

        {# Hidden file input #}
        <input
          type="file"
          id="file-{{ blockData.name }}"
          accept="{{ blockData.supportedFormats | replace(' ', '') | lower }}"
          aria-hidden="true"
          tabindex="-1"
        >
      </div>
    {% endif %}
  {% endif %}
{% endmacro %}

{#
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
May your bugs be forever exiled to the shadow realm ✦
Charlotte Carpentier · 2025
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#}
