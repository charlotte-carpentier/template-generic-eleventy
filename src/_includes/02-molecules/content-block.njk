{# ===========================================================
   @MOLECULES - CONTENT-BLOCK
   - Renders flexible content layouts with variant support
=========================================================== #}

{# Import atoms #}
{% from "03-atoms/typography.njk" import renderTypography %}
{% from "03-atoms/image.njk" import renderImage %}
{% from "03-atoms/button.njk" import renderButton %}
{% from "03-atoms/link.njk" import renderLink %}

{% macro renderContentBlock(option) %}
  {# Check if datas is provided #}
  {% if not option.datas %}
    <span class="text-red-500">Error: No content-block configuration provided</span>
  {% else %}
    {# Retrieve content-block configuration #}
    {% set contentBlocksConfig = option.datas %}
    {% set contentBlockName = option.name %}
    
    {# Find the specific content-block by name #}
    {% set contentBlockData = null %}
    {% for contentBlock in contentBlocksConfig %}
      {% if contentBlock.name == contentBlockName %}
        {% set contentBlockData = contentBlock %}
      {% endif %}
    {% endfor %}

    {# Fallback if content-block not found #}
    {% if not contentBlockData %}
      <span class="text-red-500">Content-block not found: {{ contentBlockName }}</span>
    {% else %}
      {# Render content-block molecule based on variant #}
      {% if contentBlockData.variant == "chronology" %}
        <article class="content-block content-block--{{ contentBlockData.variant }} w-full max-w-[400px] sm:max-w-[400px] mx-auto">
          <div class="content-block-chronology grid grid-cols-[auto_1fr] gap-4 items-start">
            <div class="content-block-date text-left">
              {{ renderTypography({ 
                  name: contentBlockData.dateTypographyName,
                  datas: option.typographyDatas
              }) }}
            </div>
            <div class="content-block-content flex flex-col gap-1">
              <div class="content-block-title text-left w-full">
                {{ renderTypography({ 
                    name: contentBlockData.titleTypographyName,
                    datas: option.typographyDatas
                }) }}
              </div>
              <div class="content-block-text m-0 p-0">
                {{ renderTypography({ 
                    name: contentBlockData.textTypographyName,
                    datas: option.typographyDatas
                }) }}
              </div>
            </div>
          </div>
        </article>
      {% else %}
        <div class="content-block content-block--{{ contentBlockData.variant }} w-full max-w-[400px] sm:max-w-[400px] mx-auto">
          {# Text variant #}
          {% if contentBlockData.variant == "text" %}
            <div class="content-block-text-only{% if contentBlockData.textColor %} content-block-text-color--{{ contentBlockData.textColor }}{% endif %} text-left">
              {{ renderTypography({ 
                  name: contentBlockData.textTypographyName,
                  datas: option.typographyDatas
              }) }}
            </div>
          
          {# Preview variant #}
          {% elif contentBlockData.variant == "preview" %}
            <div class="content-block-preview flex flex-col items-start gap-0">
              <div class="content-block-title text-center w-full">
                {{ renderTypography({ 
                    name: contentBlockData.titleTypographyName,
                    datas: option.typographyDatas
                }) }}
              </div>
              <div class="content-block-image relative w-full flex justify-center">
                {{ renderImage({ 
                    name: contentBlockData.imageName,
                    datas: option.imageDatas
                }) }}
                <div class="content-block-button absolute bottom-[-15px] right-0 flex justify-center">
                  {# Use link instead of button for external links #}
                  {% if contentBlockData.linkName %}
                    {{ renderLink({ 
                        name: contentBlockData.linkName,
                        datas: option.linkDatas
                    }) }}
                  {% elif contentBlockData.buttonName %}
                    {{ renderButton({ 
                        name: contentBlockData.buttonName,
                        datas: option.buttonDatas
                    }) }}
                  {% endif %}
                </div>
              </div>
            </div>
          {% endif %}
        </div>
      {% endif %}
    {% endif %}
  {% endif %}
{% endmacro %}

{# ===========================================================
   Summon HAT Components Wisely
-----------------------------------------------------------
1. Import the macro at the top of your page
{% from "02-molecules/content-block.njk" import renderContentBlock %}

2. Call a specific content-block by its name
{{ renderContentBlock({ 
    name: "journey_freelance",
    datas: molecules["content-block"]["content-blocks"],
    typographyDatas: atoms.typography.texts,
    imageDatas: atoms.image.images,
    buttonDatas: atoms.button.buttons,
    linkDatas: atoms.link.links
}) }}

May your bugs be forever exiled to the shadow realm. üßô‚Äç‚ôÇÔ∏è‚ú®
=========================================================== #}