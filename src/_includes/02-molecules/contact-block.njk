{# ===========================================================
   @MOLECULES - CONTACT-BLOCK
   - Groups contact items with icons and text content
=========================================================== #}

{% macro renderContactBlock(option) %}
  {# Import required atoms #}
  {% from "03-atoms/icon.njk" import renderIcon %}
  {% from "03-atoms/typography.njk" import renderTypography %}

  {# Check if datas is provided #}
  {% if not option.datas %}
    <span class="text-red-500">Error: No contact-block configuration provided</span>
  {% else %}
    {# Retrieve contact-block configuration #}
    {% set contactBlocksConfig = option.datas %}
    {% set contactBlockName = option.name %}
    
    {# Find the specific contact-block by name #}
    {% set contactBlockData = null %}
    {% for contactBlock in contactBlocksConfig %}
      {% if contactBlock.name == contactBlockName %}
        {% set contactBlockData = contactBlock %}
      {% endif %}
    {% endfor %}

    {# Fallback if contact-block not found #}
    {% if not contactBlockData %}
      <span class="text-red-500">Contact-block not found: {{ contactBlockName }}</span>
    {% else %}
      {# Contact block container #}
      <ul class="contact-block flex flex-col gap-2 sm:gap-1 list-none m-0 p-0">
        {% for item in contactBlockData.items %}
          <li class="contact-item flex items-center justify-start gap-2 sm:gap-1">
            {# Resolve typography text value and link from key #}
            {% set resolvedText = "" %}
            {% set resolvedLink = "" %}
            {% for text in option.typographyDatas %}
              {% if text.name == item.text %}
                {% set resolvedText = text.text %}
                {% set resolvedLink = text.link %}
              {% endif %}
            {% endfor %}

            {# Determine link type and href #}
            {% set linkHref = "" %}
            {% set ariaLabel = "" %}
            {% if item.type == "email" %}
              {% set linkHref = resolvedLink or ("mailto:" + resolvedText) %}
              {% set ariaLabel = "Send email to " + resolvedText %}
            {% elif item.type == "phone" %}
              {% set linkHref = resolvedLink or ("tel:" + resolvedText) %}
              {% set ariaLabel = "Call " + resolvedText %}
            {% endif %}

            {# Render as link or static content #}
            {% if linkHref %}
              <a href="{{ linkHref }}" class="contact-link flex items-center justify-start gap-2 sm:gap-1 no-underline text-inherit hover:text-cc-green-dark transition-colors duration-200" aria-label="{{ ariaLabel }}">
                {# Icon #}
                <div class="contact-icon flex-shrink-0 flex items-center">
                  {{ renderIcon({ 
                      name: item.icon,
                      datas: option.iconDatas
                  }) }}
                </div>
                
                {# Text #}
                <div class="contact-text flex-1 flex items-center">
                  {{ renderTypography({ 
                      name: item.text,
                      datas: option.typographyDatas
                  }) }}
                </div>
              </a>
            {% else %}
              {# Static content for location type #}
              <div class="contact-static flex items-center justify-start gap-2 sm:gap-1">
                {# Icon #}
                <div class="contact-icon flex-shrink-0 flex items-center">
                  {{ renderIcon({ 
                      name: item.icon,
                      datas: option.iconDatas
                  }) }}
                </div>
                
                {# Text #}
                <div class="contact-text flex-1 flex items-center">
                  {{ renderTypography({ 
                      name: item.text,
                      datas: option.typographyDatas
                  }) }}
                </div>
              </div>
            {% endif %}
          </li>
        {% endfor %}
      </ul>
    {% endif %}
  {% endif %}
{% endmacro %}

{# ===========================================================
   Summon HAT Components Wisely
-----------------------------------------------------------
1. Import the macro at the top of your page
{% from "02-molecules/contact-block.njk" import renderContactBlock %}

2. Call the contact block
{{ renderContactBlock({ 
    name: "main_contact",
    datas: molecules["contact-block"].contact_blocks,
    iconDatas: atoms.icon.icons,
    typographyDatas: atoms.typography.texts
}) }}

May your bugs be forever exiled to the shadow realm. üßô‚Äç‚ôÇÔ∏è‚ú®
=========================================================== #}