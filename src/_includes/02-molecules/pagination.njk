{# ┌─────────────────────────────────────────────────────────┐
   │ MOLECULE › Pagination                                   │
   │ Complete pagination with navigation and count           │
   └─────────────────────────────────────────────────────────┘ #}

{#
  Props:
    - options.name (string): Pagination identifier
    - options.datas (array): Pagination configuration data
    - options.selectDatas (array): Select atom data (optional)
    - options.buttonDatas (array): Button atom data (optional)
    - options.iconDatas (array): Icon atom data (optional)
    - options.currentPage (number): Current active page
    - options.totalPages (number): Total number of pages
    - options.itemsPerPage (number): Items per page
    - options.totalItems (number): Total count of items

  Usage — Summon HAT Components Wisely:
    {% from "02-molecules/pagination.njk" import renderPagination %}

    {{ renderPagination({
        name: "demoPagination1",
        datas: molecules.pagination.paginations,
        selectDatas: atoms.select.selects,
        buttonDatas: atoms.button.buttons,
        iconDatas: atoms.icon.icons,
        currentPage: 1,
        totalPages: 10,
        itemsPerPage: 10,
        totalItems: 98
    }) }}

  @created 2025-01-15
#}

{% from "01-atoms/select.njk" import renderSelect %}
{% from "01-atoms/button.njk" import renderButton %}
{% from "01-atoms/icon.njk" import renderIcon %}

{% macro renderPagination(options) %}
  {# Validate required props #}
  {% if not options.datas %}
    <span class="error" role="alert">Error: Missing required prop (datas)</span>
  {% elif not options.name %}
    <span class="error" role="alert">Error: Missing required prop (name)</span>
  {% else %}
    {# Find pagination using universal filter #}
    {% set paginationData = options.datas | findByName(options.name) %}

    {# Render or error #}
    {% if not paginationData %}
      <span class="error" role="alert">Pagination not found: {{ options.name }}</span>
    {% else %}
      <div
        data-pagination-name="{{ paginationData.name }}"
        data-pagination-type="pagination"
      >
        {# Items per page selector (if selectName provided) #}
        {% if paginationData.selectName and options.selectDatas %}
          <div data-pagination-selector="true">
            {{ renderSelect({
                name: paginationData.selectName,
                datas: options.selectDatas
            }) }}
          </div>
        {% endif %}

        {# Navigation #}
        {% if paginationData.pages %}
          <nav
            role="navigation"
            aria-label="Pagination"
            data-pagination-nav="true"
          >
            <ul>
              {% for page in paginationData.pages %}
                <li>
                  {# Icon button (first, prev, next, last) #}
                  {% if page.iconName %}
                    <a
                      href="{{ page.url | default('#') }}"
                      data-pagination-link="true"
                      data-pagination-action="{{ page.action }}"
                      aria-label="{{ page.ariaLabel | default('Navigate') }}"
                      rel="nofollow"
                    >
                      {{ renderIcon({
                          name: page.iconName,
                          datas: options.iconDatas
                      }) }}
                    </a>

                  {# Page number #}
                  {% else %}
                    <a
                      href="{{ page.url | default('#') }}"
                      data-pagination-link="true"
                      {% if page.current %}data-pagination-current="true" aria-current="page"{% endif %}
                      rel="nofollow"
                    >
                      {{ page.label }}
                    </a>
                  {% endif %}
                </li>
              {% endfor %}
            </ul>
          </nav>
        {% endif %}

        {# Items counter (if totalItems provided) #}
        {% if options.totalItems and options.currentPage and options.itemsPerPage %}
          {% set firstItem = (options.currentPage - 1) * options.itemsPerPage + 1 %}
          {% set lastItem = options.currentPage * options.itemsPerPage %}
          {% if lastItem > options.totalItems %}
            {% set lastItem = options.totalItems %}
          {% endif %}

          <div data-pagination-counter="true">
            <span>
              {{ firstItem }} - {{ lastItem }} of {{ options.totalItems }}
            </span>
          </div>
        {% endif %}
      </div>
    {% endif %}
  {% endif %}
{% endmacro %}

{#
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
May your bugs be forever exiled to the shadow realm ✦
Charlotte Carpentier · 2025
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#}
