{#
=========================
       BREADCRUMB        
=========================
#}

{% macro renderBreadcrumb(options) %}
  {% if options.datas %}
    {% set globalStyle = options.datas.globalStyle %}
    {% set separatorStyle = options.datas.separatorStyle | default('mx-2 text-gray-400') %}
    {% set separatorIcon = options.datas.separatorIcon | default('/') %}
    {% set activeItemStyle = options.datas.activeItemStyle | default('font-bold text-gray-900') %}
    
    {% set breadcrumbData = null %}
    {% if options.name %}
      {% for crumbSet in options.datas.breadcrumbs %}
        {% if crumbSet.name == options.name %}
          {% set breadcrumbData = crumbSet %}
        {% endif %}
      {% endfor %}
    {% endif %}

    {% if not breadcrumbData %}
      {% set breadcrumbData = options.datas.breadcrumbs[0] %}
    {% endif %}
    
    {% set stateClasses = {
      'default': options.datas.variants.default | default('text-gray-800'),
      'hover': options.datas.variants.hover | default('text-gray-600'),
      'focus': options.datas.variants.focus | default('text-gray-800 outline-2 outline-blue-500 outline-offset-2'),
      'disabled': options.datas.variants.disabled | default('text-gray-400 cursor-not-allowed')
    } %}
    
    <nav aria-label="Breadcrumb" class="{{ globalStyle }} {{ options.class | default('') }}">
      <ol class="flex flex-wrap items-center">
        {% for crumb in breadcrumbData.links %}
          <li class="flex items-center">
            {% if loop.index > 1 %}
              <span class="{{ separatorStyle }}" aria-hidden="true">{{ separatorIcon }}</span>
            {% endif %}
            
            {% if crumb.link and options.links %}
              {# Try to find the corresponding link #}
              {% set linkFound = false %}
              {% for link in options.links.links %}
                {% if link.name == crumb.link %}
                  <a href="{{ link.href }}" 
                     class="{{ stateClasses.default }}"
                     onmouseover="this.className='{{ stateClasses.hover }}'" 
                     onmouseout="this.className='{{ stateClasses.default }}'"
                     onfocus="this.className='{{ stateClasses.focus }}'"
                     onblur="this.className='{{ stateClasses.default }}'">
                    {{ link.text }}
                  </a>
                  {% set linkFound = true %}
                {% endif %}
              {% endfor %}
              
              {% if not linkFound %}
                <span class="{{ stateClasses.default }}">
                  {{ crumb.name }}
                </span>
              {% endif %}
            {% else %}
              <span class="{{ activeItemStyle }}">
                {{ crumb.name }}
              </span>
            {% endif %}
          </li>
        {% endfor %}
      </ol>
    </nav>
  {% else %}
    <span class="text-red-500">Breadcrumb data not found</span>
  {% endif %}
{% endmacro %}


{#
============================
Summon HAT Components Wisely
============================

1. Import the macro at the top of your page
{% from "02-molecules/breadcrumb.njk" import renderBreadcrumb %}

2. Call the breadcrumb component with a specific name
{{ renderBreadcrumb({ 
    name: "adventure",
    datas: molecules.breadcrumbs,
    links: atoms.links 
}) }}

3. Using custom styles
{{ renderBreadcrumb({ 
    datas: molecules.breadcrumbs,
    links: atoms.links,
    class: "my-custom-breadcrumb-class"
}) }}

4. Structure of breadcrumbs.json
{
  "breadcrumbs": [
    {
      "name": "adventure",
      "links": [
        {
          "name": "home",
          "link": "tavern_quest",
          "style": "primary"
        },
        {
          "name": "bestiary",
          "link": "monster_manual",
          "style": "secondary"
        }
      ]
    }
  ]
}

No wrong turns, only side quests! üó∫Ô∏èüé≠
#}