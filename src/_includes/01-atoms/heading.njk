{# ┌─────────────────────────────────────────────────────────┐
   │ ATOM › Heading                                          │
   │ Semantic text content with variant styling              │
   └─────────────────────────────────────────────────────────┘ #}

{#
  Props:
    - option.name (string): Heading identifier
    - option.datas (array): Heading configuration data
    - option.tag (string): Override HTML tag (h1-h6, p, span, small)
  
  Usage:
    {% from "01-atoms/heading.njk" import renderHeading %}
    
    {{ renderHeading({ 
        name: "page_title",
        datas: atoms.heading.texts
    }) }}
  
  Notes:
    - Uses existing text classes from input.css
    - Automatically adds security attributes to external links
    - Supports inline HTML content with safe filter
  
  Security:
    - Adds rel="noopener noreferrer" to external links with target="_blank"
  
  @created 2025-01-15
#}

{% macro renderTypography(option) %}
  {# Check if datas is provided #}
  {% if not option.datas %}
    <span>Error: No typography configuration provided</span>
  {% else %}
    {# Retrieve typography configuration #}
    {% set typographyConfig = option.datas %}
    {% set typographyName = option.name %}
    
    {# Find the specific typography by name #}
    {% set typographyData = null %}
    {% for typography in typographyConfig %}
      {% if typography.name == typographyName %}
        {% set typographyData = typography %}
      {% endif %}
    {% endfor %}

    {# Fallback if typography not found #}
    {% if not typographyData %}
      <span>Typography not found: {{ typographyName }}</span>
    {% else %}
      {# Build CSS classes #}
      {% set tag = option.tag | default(typographyData.tag) | default('') %}
      {% set variant = typographyData.variant | default('') %}
      {% set cssClasses = 'text-' ~ variant %}
      
      {# Security: Add rel="noopener noreferrer" to external links with target="_blank" #}
      {% set secureContent = typographyData.text %}
      {% if 'target="_blank"' in secureContent and 'rel=' not in secureContent %}
        {% set secureContent = secureContent | replace('target="_blank"', 'target="_blank" rel="noopener noreferrer"') %}
      {% endif %}
      
      {# Render the typography with specified tag #}
      {% if tag == 'h1' %}
        <h1 class="{{ cssClasses }}">{{ secureContent | safe }}</h1>
      {% elif tag == 'h2' %}
        <h2 class="{{ cssClasses }}">{{ secureContent | safe }}</h2>
      {% elif tag == 'h3' %}
        <h3 class="{{ cssClasses }}">{{ secureContent | safe }}</h3>
      {% elif tag == 'h4' %}
        <h4 class="{{ cssClasses }}">{{ secureContent | safe }}</h4>
      {% elif tag == 'h5' %}
        <h5 class="{{ cssClasses }}">{{ secureContent | safe }}</h5>
      {% elif tag == 'h6' %}
        <h6 class="{{ cssClasses }}">{{ secureContent | safe }}</h6>
      {% elif tag == 'span' %}
        <span class="{{ cssClasses }}">{{ secureContent | safe }}</span>
      {% elif tag == 'small' %}
        <small class="{{ cssClasses }}">{{ secureContent | safe }}</small>
      {% else %}
        <p class="{{ cssClasses }}">{{ secureContent | safe }}</p>
      {% endif %}
    {% endif %}
  {% endif %}
{% endmacro %}

{#
============================
Summon HAT Components Wisely
============================

May your bugs be forever exiled to the shadow realm. ✦
#}