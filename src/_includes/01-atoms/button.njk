{# ┌─────────────────────────────────────────────────────────┐
   │ ATOM › Button                                           │
   │ Interactive button with variants and states             │
   └─────────────────────────────────────────────────────────┘ #}

{#
  Usage — Summon HAT Components Wisely:
    {% from "01-atoms/button.njk" import renderButton %}

    Basic button:
    {{ renderButton({
        name: "button_default",
        datas: atoms.button.buttons
    }) }}

    Error page button with specific styling:
    {{ renderButton({
        name: "button-reveal-all",
        datas: option.buttonDatas,
        isErrorPage: true
    }) }}

  Props:
    - option.name (string): Button identifier
    - option.datas (array): Button configuration data
    - option.type (string): Button type (default: "button")
    - option.disabled (boolean): Override disabled state
    - option.onclick (string): Inline click handler
    - option.id (string): Button ID attribute
    - option.ariaLabel (string): ARIA label for accessibility
    - option.ariaDescribedby (string): ARIA described-by reference
    - option.isErrorPage (boolean): Apply error-page-specific styling

  @created 2025-01-15
#}

{% macro renderButton(option) %}
  {# Validate input data #}
  {% if not option.datas %}
    <span>Error: No button configuration provided</span>
  {% else %}
    {# Retrieve button config and find matching button by name #}
    {% set buttonsConfig = option.datas %}
    {% set buttonName = option.name %}
    {% set buttonData = null %}
    {% for button in buttonsConfig %}
      {% if button.name == buttonName %}
        {% set buttonData = button %}
      {% endif %}
    {% endfor %}

    {# Fallback if button not found #}
    {% if not buttonData %}
      <span>Button not found:
        {{ buttonName }}</span>
    {% else %}
      {# Compose CSS classes with variant and disabled state #}
      {% set variant = buttonData.variant | default('') %}
      {% set cssClasses = '' ~ variant %}
      {% if option.disabled or buttonData.disabled %}
        {% set cssClasses = cssClasses ~ '' %}
      {% endif %}

      {# Prepare accessibility attributes - auto-use from buttonData #}
      {% set ariaLabel = option.ariaLabel or buttonData.ariaLabel or null %}
      {% set ariaDescribedby = option.ariaDescribedby or buttonData.ariaDescribedby or null %}

      {# Apply error-page-specific opacity and transitions for accessibility focus/hover #}
      {% if option.isErrorPage %}
        {% set cssClasses = cssClasses ~ '' %}
      {% endif %}

      {# Render the actual button element #}
      <button type="{{ option.type | default(buttonData.type) | default('button') }}" class="{{ cssClasses }}" data-button="{{ buttonData.name }}" {% if option.disabled or buttonData.disabled %} disabled{% endif %}="disabled{% endif %}" {% if option.onclick %} onclick="{{ option.onclick | escape }}" {% endif %} {% if option.id %} id="{{ option.id }}" {% if ariaLabel %} aria-label="{{ ariaLabel }}" {% if ariaDescribedby %} aria-describedby="{{ ariaDescribedby }}">
        {{ buttonData.text }}
      </button>
    {% endif %}
  {% endif %}
{% endmacro %}

{#
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
May your bugs be forever exiled to the shadow realm ✦
Charlotte Carpentier · 2025
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#}
