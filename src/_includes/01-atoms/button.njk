{# ┌─────────────────────────────────────────────────────────┐
   │ ATOM › Button                                           │
   │ Interactive button with variants and states             │
   └─────────────────────────────────────────────────────────┘ #}

{#
  Props:
    - options.name (string): Button identifier
    - options.datas (array): Button configuration data
    - options.type (string): Button type override
    - options.disabled (boolean): Override disabled state
    - options.onclick (string): Inline click handler
    - options.id (string): Button ID attribute
    - options.ariaLabel (string): ARIA label for accessibility
    - options.ariaDescribedby (string): ARIA described-by reference
    - options.isErrorPage (boolean): Apply error-page-specific styling
    - options.iconDatas (array): Icon atom data (required if button has icons)

  Usage — Summon HAT Components Wisely:
    {% from "01-atoms/button.njk" import renderButton %}

    Basic button:
    {{ renderButton({
        name: "demoButton1",
        datas: atoms.button.buttons,
        iconDatas: atoms.icon.icons
    }) }}

    Error page button with specific styling:
    {{ renderButton({
        name: "button-reveal-all",
        datas: option.buttonDatas,
        iconDatas: option.iconDatas,
        isErrorPage: true
    }) }}

  @created 2025-01-15
  @updated 2025-01-17 - Added Tailwind CSS styles (Phase 4)
#}

{% from "01-atoms/icon.njk" import renderIcon %}

{% macro renderButton(options) %}
  {# Validate required props #}
  {% if not options.datas %}
    <span class="error" role="alert">Error: Missing required prop (datas)</span>
  {% elif not options.name %}
    <span class="error" role="alert">Error: Missing required prop (name)</span>
  {% else %}
    {# Find button using universal filter #}
    {% set buttonData = options.datas | findByName(options.name) %}

    {# Render button or error message #}
    {% if not buttonData %}
      <span class="error" role="alert">Button not found: {{ options.name }}</span>
    {% else %}
      {# Compute final values with fallback cascade #}
      {% set buttonType = options.type | default(buttonData.type) | default('button') %}
      {% set isDisabled = options.disabled or buttonData.disabled %}
      {% set finalAriaLabel = options.ariaLabel | default(buttonData.ariaLabel) %}
      {% set finalAriaDescribedby = options.ariaDescribedby | default(buttonData.ariaDescribedby) %}
      
      {# Check if button has icon #}
      {% set hasIcon = buttonData.iconName %}
      {% set iconPosition = buttonData.iconPosition | default('left') %}

      {# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
         CSS Classes - Tailwind Utilities
      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ #}

      {# Base classes - Common to all buttons
         Layout, typography, transitions, focus states (WCAG 2.2 AA compliant) #}
      {% set baseClasses = "inline-flex items-center justify-center font-medium transition-colors cursor-pointer focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[var(--color-semantic-information-focus)]" %}

      {# Size classes - Padding and text size
         Based on Material Design standards + WCAG 44px minimum touch target #}
      {% set sizeClasses = "" %}
      {% if buttonData.size == 'small' %}
        {% set sizeClasses = "px-4 py-2 text-sm rounded-[var(--radius-6)]" %}
      {% else %}
        {# Default size #}
        {% set sizeClasses = "px-6 py-3 text-base rounded-[var(--radius-button)]" %}
      {% endif %}

      {# Variant classes - Visual style mapping
         Uses design tokens from input.css @theme #}
      {% set variantClasses = "" %}
      
      {% if buttonData.variant == 'primary' %}
        {% set variantClasses = "bg-[var(--color-button-primary)] text-white hover:bg-[var(--color-button-primary-hover)] active:bg-[var(--color-button-primary-hover)] disabled:opacity-50 disabled:cursor-not-allowed" %}
      
      {% elif buttonData.variant == 'secondary' %}
        {% set variantClasses = "bg-transparent text-[var(--color-button-secondary)] border-2 border-[var(--color-button-secondary)] hover:bg-[var(--color-button-secondary-hover-light)] active:bg-[var(--color-button-secondary-hover-light)] disabled:opacity-50 disabled:cursor-not-allowed" %}
      
      {% elif buttonData.variant == 'ghost' %}
        {% set variantClasses = "bg-transparent text-[var(--color-global-default)] hover:bg-[var(--color-global-contrast-light-04)] active:bg-[var(--color-global-contrast-light-03)] disabled:opacity-50 disabled:cursor-not-allowed" %}
      
      {% elif buttonData.variant == 'icon' %}
        {% set variantClasses = "bg-transparent text-[var(--color-global-default)] hover:bg-[var(--color-global-contrast-light-04)] active:bg-[var(--color-global-contrast-light-04)] disabled:opacity-50 disabled:cursor-not-allowed" %}
      
      {% elif buttonData.variant == 'segmented' %}
        {% set variantClasses = "bg-transparent border border-[var(--color-global-contrast-light-03)] text-[var(--color-global-default)] hover:bg-[var(--color-global-contrast-light-04)] active:bg-[var(--color-button-primary)] active:text-white aria-selected:bg-[var(--color-button-primary)] aria-selected:text-white disabled:opacity-50 disabled:cursor-not-allowed" %}
      
      {% elif buttonData.variant == 'fixed' %}
        {% set variantClasses = "bg-[var(--color-global-contrast-light-04)] text-[var(--color-global-default)] hover:bg-[var(--color-global-contrast-light-03)] active:bg-[var(--color-global-contrast-light-03)] disabled:opacity-50 disabled:cursor-not-allowed" %}
      
      {% else %}
        {# Default fallback = primary variant #}
        {% set variantClasses = "bg-[var(--color-button-primary)] text-white hover:bg-[var(--color-button-primary-hover)] active:bg-[var(--color-button-primary-hover)] disabled:opacity-50 disabled:cursor-not-allowed" %}
      {% endif %}

      {# Icon spacing - Gap between icon and text
         Material Design standard: 8px gap #}
      {% set iconClasses = "" %}
      {% if hasIcon and iconPosition != 'center' %}
        {% set iconClasses = "gap-2" %}
      {% endif %}

      {# Render button element #}
      <button
        type="{{ buttonType }}"
        class="{{ baseClasses }} {{ sizeClasses }} {{ variantClasses }} {{ iconClasses }}"
        data-button-name="{{ buttonData.name }}"
        data-button-type="button"
        {% if hasIcon %}data-button-icon-position="{{ iconPosition }}"{% endif %}
        {% if isDisabled %}disabled{% endif %}
        {% if options.onclick %}onclick="{{ options.onclick | escape }}"{% endif %}
        {% if options.id %}id="{{ options.id }}"{% endif %}
        {% if finalAriaLabel %}aria-label="{{ finalAriaLabel }}"{% endif %}
        {% if finalAriaDescribedby %}aria-describedby="{{ finalAriaDescribedby }}"{% endif %}
      >
        {# Icon left position #}
        {% if hasIcon and (iconPosition == 'left' or iconPosition == 'both') %}
          {% if options.iconDatas %}
            {{ renderIcon({ 
                name: buttonData.iconName, 
                datas: options.iconDatas 
            }) }}
          {% endif %}
        {% endif %}

        {# Icon center position (icon-only button) #}
        {% if hasIcon and iconPosition == 'center' %}
          {% if options.iconDatas %}
            {{ renderIcon({ 
                name: buttonData.iconName, 
                datas: options.iconDatas 
            }) }}
          {% endif %}
        {% endif %}

        {# Button text (skip for icon-only buttons) #}
        {% if iconPosition != 'center' %}
          {{ buttonData.text }}
        {% endif %}

        {# Icon right position #}
        {% if hasIcon and (iconPosition == 'right' or iconPosition == 'both') %}
          {% if options.iconDatas %}
            {{ renderIcon({ 
                name: buttonData.iconName, 
                datas: options.iconDatas 
            }) }}
          {% endif %}
        {% endif %}
      </button>
    {% endif %}
  {% endif %}
{% endmacro %}

{#
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
May your bugs be forever exiled to the shadow realm ✦
Charlotte Carpentier · 2025
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#}