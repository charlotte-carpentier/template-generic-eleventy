{# ┌─────────────────────────────────────────────────────────┐
   │ ATOM › Input                                            │
   │ Form input fields with validation and states            │
   └─────────────────────────────────────────────────────────┘ #}

{#
  Props:
    - options.name (string): Input identifier
    - options.datas (array): Input configuration data
    - options.disabled (boolean): Override disabled state
    - options.selectDatas (array): Select atom data (for type="select")

  Usage — Summon HAT Components Wisely:
    {% from "01-atoms/input.njk" import renderInput %}

    {{ renderInput({
        name: "demoInput1",
        datas: atoms.input.inputs
    }) }}

  @created 2025-01-15
  @updated 2025-10-26
#}

{% macro renderInput(options) %}
  {# Validate required props #}
  {% if not options.datas %}
    <span class="error" role="alert">Error: Missing required prop (datas)</span>
  {% elif not options.name %}
    <span class="error" role="alert">Error: Missing required prop (name)</span>
  {% else %}
    {# Find input using universal filter #}
    {% set inputData = options.datas | findByName(options.name) %}

    {# Render input or error message #}
    {% if not inputData %}
      <span class="error" role="alert">Input not found: {{ options.name }}</span>
    {% else %}
      {# Compute final values #}
      {% set inputId = inputData.id | default(options.name) %}
      {% set inputName = inputData.name | default(inputId) %}
      {% set inputType = inputData.type | default('text') %}
      {% set isDisabled = options.disabled or inputData.disabled %}

      {# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
         CSS Classes
      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ #}

      {# Base classes - Common to all inputs #}
      {% set baseClasses = "block w-full px-3 py-2.5 text-base text-[var(--color-global-default)] placeholder:italic placeholder:text-[var(--color-global-contrast-light-02)] bg-white border border-[var(--color-form)] rounded-[var(--radius-input)] transition-colors hover:border-[var(--color-form-hover)] focus:outline-none focus:ring-2 focus:ring-[var(--color-form-active)] focus:ring-offset-0 disabled:bg-[var(--color-global-contrast-light-04)] disabled:opacity-50 disabled:cursor-not-allowed" %}

      {# Label classes #}
      {% set labelClasses = "block mb-1.5 text-sm font-medium text-[var(--color-global-default)]" %}

      {# Help text classes #}
      {% set helpClasses = "mt-1.5 text-sm text-[var(--color-global-contrast-light-02)]" %}

      {# Counter classes #}
      {% set counterClasses = "mt-1.5 text-sm text-right text-[var(--color-global-contrast-light-02)]" %}

      {# Input container #}
      <div class="input-wrapper">
        {# Label #}
        {% if inputData.label %}
          <label for="{{ inputId }}" class="{{ labelClasses }}">
            {{ inputData.label }}{% if inputData.required %}*{% endif %}
          </label>
        {% endif %}

        {# Text Input #}
        {% if inputType in ['text', 'email', 'tel', 'password'] %}
          <input
            type="{{ inputType }}"
            id="{{ inputId }}"
            name="{{ inputName }}"
            class="{{ baseClasses }}"
            placeholder="{{ inputData.placeholder }}"
            data-input-name="{{ inputData.name }}"
            data-input-type="input"
            data-error-message="{{ inputData.errorMessage }}"
            {% if inputData.required %}required{% endif %}
            {% if inputData.maxLength %}maxlength="{{ inputData.maxLength }}"{% endif %}
            {% if inputData.pattern %}pattern="{{ inputData.pattern }}"{% endif %}
            {% if isDisabled %}disabled{% endif %}
            aria-describedby="{% if inputData.patternMessage %}{{ inputId }}-help {% endif %}{{ inputId }}-error"
          />

        {# Textarea #}
        {% elif inputType == 'textarea' %}
          <textarea
            id="{{ inputId }}"
            name="{{ inputName }}"
            class="{{ baseClasses }} resize-none"
            placeholder="{{ inputData.placeholder }}"
            rows="{{ inputData.rows | default(3) }}"
            data-input-name="{{ inputData.name }}"
            data-input-type="textarea"
            data-error-message="{{ inputData.errorMessage }}"
            {% if inputData.required %}required{% endif %}
            {% if inputData.maxLength %}maxlength="{{ inputData.maxLength }}"{% endif %}
            {% if isDisabled %}disabled{% endif %}
            aria-describedby="{% if inputData.maxLength %}{{ inputId }}-count {% endif %}{% if inputData.patternMessage %}{{ inputId }}-help {% endif %}{{ inputId }}-error"
          ></textarea>

          {# Character counter #}
          {% if inputData.maxLength %}
            <div id="{{ inputId }}-count" class="{{ counterClasses }}">
              0/{{ inputData.maxLength }}
            </div>
          {% endif %}

        {# Select dropdown #}
        {% elif inputType == 'select' %}
          {% if inputData.selectName and options.selectDatas %}
            {% set selectData = options.selectDatas | findByName(inputData.selectName) %}
            {% if selectData %}
              <select
                id="{{ inputId }}"
                name="{{ inputName }}"
                class="{{ baseClasses }}"
                data-input-name="{{ inputData.name }}"
                data-input-type="select"
                data-error-message="{{ inputData.errorMessage }}"
                {% if inputData.required %}required{% endif %}
                {% if isDisabled %}disabled{% endif %}
                aria-describedby="{% if inputData.patternMessage %}{{ inputId }}-help {% endif %}{{ inputId }}-error"
              >
                {% for opt in selectData.options %}
                  <option 
                    value="{{ opt.value }}"
                    {% if opt.selected %}selected{% endif %}
                  >
                    {{ opt.label }}
                  </option>
                {% endfor %}
              </select>
            {% else %}
              <span class="error" role="alert">Select data not found: {{ inputData.selectName }}</span>
            {% endif %}
          {% else %}
            <span class="error" role="alert">Missing selectDatas prop or selectName in input data</span>
          {% endif %}

        {# Multiselect #}
        {% elif inputType == 'multiselect' %}
          <div class="input-multiselect" data-input-type="multiselect">
            <select
              id="{{ inputId }}"
              name="{{ inputName }}"
              multiple
              class="{{ baseClasses }}"
              data-input-name="{{ inputData.name }}"
              data-error-message="{{ inputData.errorMessage }}"
              {% if inputData.required %}required{% endif %}
              {% if isDisabled %}disabled{% endif %}
              aria-describedby="{% if inputData.patternMessage %}{{ inputId }}-help {% endif %}{{ inputId }}-error"
            >
              <option value="">Select options</option>
            </select>

            {% if inputData.chipMulti %}
              <div 
                class="flex flex-wrap gap-2 mt-2" 
                data-chip-container="{{ inputId }}"
                data-chip-template="{{ inputData.chipMulti | dump | escape }}"
              >
              </div>
            {% endif %}
          </div>

        {# Date input #}
        {% elif inputType == 'date' %}
          <input
            type="date"
            id="{{ inputId }}"
            name="{{ inputName }}"
            class="{{ baseClasses }}"
            placeholder="{{ inputData.placeholder | default('dd/mm/yyyy') }}"
            data-input-name="{{ inputData.name }}"
            data-input-type="date"
            data-error-message="{{ inputData.errorMessage }}"
            {% if inputData.required %}required{% endif %}
            {% if isDisabled %}disabled{% endif %}
            aria-describedby="{% if inputData.patternMessage %}{{ inputId }}-help {% endif %}{{ inputId }}-error"
          />

        {# Phone input #}
        {% elif inputType == 'phone' %}
          <input
            type="tel"
            id="{{ inputId }}"
            name="{{ inputName }}"
            class="{{ baseClasses }}"
            placeholder="{{ inputData.placeholder }}"
            data-input-name="{{ inputData.name }}"
            data-input-type="phone"
            data-error-message="{{ inputData.errorMessage }}"
            {% if inputData.required %}required{% endif %}
            {% if inputData.maxLength %}maxlength="{{ inputData.maxLength }}"{% endif %}
            {% if isDisabled %}disabled{% endif %}
            aria-describedby="{% if inputData.patternMessage %}{{ inputId }}-help {% endif %}{{ inputId }}-error"
          />

        {# Panel input #}
        {% elif inputType == 'panel' %}
          <textarea
            id="{{ inputId }}"
            name="{{ inputName }}"
            class="{{ baseClasses }} resize-none"
            placeholder="{{ inputData.placeholder }}"
            rows="{{ inputData.rows | default(4) }}"
            data-input-name="{{ inputData.name }}"
            data-input-type="panel"
            data-error-message="{{ inputData.errorMessage }}"
            {% if inputData.required %}required{% endif %}
            {% if isDisabled %}disabled{% endif %}
            aria-describedby="{% if inputData.patternMessage %}{{ inputId }}-help {% endif %}{{ inputId }}-error"
          ></textarea>

        {% else %}
          <span class="error" role="alert">Unsupported input type: {{ inputType }}</span>
        {% endif %}

        {# Help text - Pattern message #}
        {% if inputData.patternMessage %}
          <div id="{{ inputId }}-help" class="{{ helpClasses }}">
            {{ inputData.patternMessage }}
          </div>
        {% endif %}
      </div>
    {% endif %}
  {% endif %}
{% endmacro %}

{#
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
May your bugs be forever exiled to the shadow realm ✦
Charlotte Carpentier · 2025
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#}