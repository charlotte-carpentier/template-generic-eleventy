{# ┌─────────────────────────────────────────────────────────┐
   │ ORGANISM › Navigation Secondary                         │
   │ Secondary navigation with link integration              │
   └─────────────────────────────────────────────────────────┘ #}

{#
  Props:
    - options.name (string): Navigation identifier
    - options.datas (array): Navigation configuration data
    - options.linkDatas (array): Link atom data

  Usage — Summon HAT Components Wisely:
    {% from "03-organisms/navigation-secondary.njk" import renderNavigationSecondary %}

    {{ renderNavigationSecondary({
        name: "demoNavSec1",
        datas: organisms["navigation-secondary"].navSecondary,
        linkDatas: atoms.link.links
    }) }}

  @created 2025-01-15
#}

{% macro renderNavigationSecondary(options) %}
  {# Import sub-component - Fix: renderLink instead of linkComponent #}
  {% from "01-atoms/link.njk" import renderLink %}

  {# Validate required props #}
  {% if not options.datas %}
    <span class="error" role="alert">Error: Missing required prop (datas)</span>
  {% elif not options.name %}
    <span class="error" role="alert">Error: Missing required prop (name)</span>
  {% else %}
    {# Find navigation using universal filter - Performance: early return with JavaScript .find() #}
    {% set navData = options.datas | findByName(options.name) %}

    {# Render navigation or error message #}
    {% if not navData %}
      <span class="error" role="alert">Navigation not found: {{ options.name }}</span>
    {% else %}
      {# Render nav element - W3C Navigation Lists pattern with <ul> wrapper #}
      {# Source: https://www.w3.org/WAI/tutorials/menus/structure/ #}
      <nav 
        aria-label="{{ navData.ariaLabel }}"
        data-nav-name="{{ navData.name }}"
        data-nav-type="navigation-secondary"
      >
        <ul data-nav-list>
          {# Loop through items (not links - JSON structure uses items[]) #}
          {% for item in navData.items %}
            <li data-nav-item>
              {# Render link with active/disabled states support #}
              {{ renderLink({
                  name: item.linkName,
                  datas: options.linkDatas,
                  active: item.active,
                  disabled: item.disabled
              }) }}
            </li>
          {% endfor %}
        </ul>
      </nav>
    {% endif %}
  {% endif %}
{% endmacro %}

{#
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
May your bugs be forever exiled to the shadow realm ✦
Charlotte Carpentier · 2025
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#}