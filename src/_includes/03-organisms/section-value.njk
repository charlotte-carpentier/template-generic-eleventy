{# ┌─────────────────────────────────────────────────────────┐
   │ ORGANISM › Section Value                                │
   │ Value proposition section with simple or cards layout   │
   └─────────────────────────────────────────────────────────┘ #}

{#
  Props:
    - options.name (string): Section identifier
    - options.datas (array): Section configuration data
    - options.headingDatas (array): Heading atom data
    - options.buttonDatas (array): Button atom data
    - options.cardDatas (array): Card molecule data (for type="cards")

  Usage — Summon HAT Components Wisely:
    {% from "03-organisms/section-value.njk" import renderSectionValue %}

    Simple layout:
    {{ renderSectionValue({
        name: "demoSectV1",
        datas: organisms["section-value"].sectValues,
        headingDatas: atoms.heading.headings,
        buttonDatas: atoms.button.buttons
    }) }}

    Cards layout:
    {{ renderSectionValue({
        name: "demoSectV2",
        datas: organisms["section-value"].sectValues,
        headingDatas: atoms.heading.headings,
        cardDatas: molecules.card.cards
    }) }}

  @created 2025-01-15
#}

{% macro renderSectionValue(options) %}
  {# Import sub-components #}
  {% from "01-atoms/heading.njk" import renderHeading %}
  {% from "01-atoms/button.njk" import renderButton %}
  {% from "02-molecules/card.njk" import renderCard %}

  {# Validate required props #}
  {% if not options.datas %}
    <span class="error" role="alert">Error: Missing required prop (datas)</span>
  {% elif not options.name %}
    <span class="error" role="alert">Error: Missing required prop (name)</span>
  {% else %}
    {# Find section using universal filter #}
    {% set sectionData = options.datas | findByName(options.name) %}

    {# Render section or error message #}
    {% if not sectionData %}
      <span class="error" role="alert">Section not found: {{ options.name }}</span>
    {% else %}
      {# Render section element - Value proposition pattern #}
      <section 
        aria-label="{{ sectionData.ariaLabel }}"
        data-section-name="{{ sectionData.name }}"
        data-section-type="section-value"
        data-section-variant="{{ sectionData.type }}"
      >
        
        <div data-section-container>
          
          {# Heading area - Common to both types #}
          <div data-section-header>
            
            {# Super heading - Optional secondary title #}
            {% if sectionData.superHeadingName %}
              <div data-section-super-heading>
                {{ renderHeading({
                    name: sectionData.superHeadingName,
                    datas: options.headingDatas
                }) }}
              </div>
            {% endif %}
            
            {# Main heading #}
            {% if sectionData.headingName %}
              <div data-section-heading>
                {{ renderHeading({
                    name: sectionData.headingName,
                    datas: options.headingDatas
                }) }}
              </div>
            {% endif %}
            
          </div>
          
          {# Content area - Depends on type #}
          {% if sectionData.type == "simple" %}
            
            {# Simple type: content + buttons #}
            <div data-section-content>
              
              {# Content text #}
              {% if sectionData.content %}
                <div data-section-text>
                  <p>{{ sectionData.content }}</p>
                </div>
              {% endif %}
              
              {# Call-to-action buttons #}
              {% if sectionData.primaryButtonName or sectionData.secondaryButtonName %}
                <div data-section-buttons>
                  
                  {# Primary button #}
                  {% if sectionData.primaryButtonName %}
                    {{ renderButton({
                        name: sectionData.primaryButtonName,
                        datas: options.buttonDatas
                    }) }}
                  {% endif %}
                  
                  {# Secondary button #}
                  {% if sectionData.secondaryButtonName %}
                    {{ renderButton({
                        name: sectionData.secondaryButtonName,
                        datas: options.buttonDatas
                    }) }}
                  {% endif %}
                  
                </div>
              {% endif %}
              
            </div>
            
          {% elif sectionData.type == "cards" %}
            
            {# Cards type: grid of cards filtered by tags #}
            <div data-section-cards>
              {% if sectionData.cardTags and options.cardDatas %}
                {# Filter cards by tags - Loop through all cards and check tags #}
                {% for card in options.cardDatas %}
                  {# Check if card has matching tags #}
                  {% if card.tags %}
                    {% for tag in sectionData.cardTags %}
                      {% if tag in card.tags %}
                        <div data-card-item>
                          {{ renderCard({
                              name: card.name,
                              datas: options.cardDatas
                          }) }}
                        </div>
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% endif %}
            </div>
            
          {% endif %}
          
        </div>
        
      </section>
    {% endif %}
  {% endif %}
{% endmacro %}

{#
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
May your bugs be forever exiled to the shadow realm ✦
Charlotte Carpentier · 2025
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#}