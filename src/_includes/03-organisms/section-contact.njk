{# ┌─────────────────────────────────────────────────────────┐
   │ ORGANISM › Section Contact                              │
   │ Contact section with info block and Netlify form        │
   └─────────────────────────────────────────────────────────┘ #}

{#
  Usage — Summon HAT Components Wisely:
    {% from "03-organisms/section-contact.njk" import renderSectionContact %}
    {{ renderSectionContact({ 
      name: "charlotte_contact",
      datas: organisms["section-contact"].sections,
      typographyDatas: atoms.typography.texts,
      contactBlockDatas: molecules["contact-block"].contact_blocks,
      listFormDatas: molecules["list-form"]["list-forms"],
      iconDatas: atoms.icon.icons,
      radioDatas: atoms.radio.radios,
      inputDatas: atoms.input.inputs,
      buttonDatas: atoms.button.buttons
    }) }}
  
  Props:
    - option.name (string): Section identifier
    - option.datas (array): Section configurations
    - option.typographyDatas (object): Typography data source
    - option.contactBlockDatas (object): Contact block data source
    - option.listFormDatas (object): Form data source
    - option.iconDatas (object): Icons data source
    - option.radioDatas (object): Radio buttons data source
    - option.inputDatas (object): Input fields data source
    - option.buttonDatas (object): Buttons data source
    - option.class (string): Additional CSS classes
  
  Features:
    - Semantic HTML with ARIA landmarks
    - Contact information display via contact-block molecule
    - Netlify form integration with submit button
    - Horizontal separator with gradient
    - Responsive centered layout
  
  Accessibility:
    - Region role with labelledby reference
    - Proper heading hierarchy
    - Form accessibility via list-form molecule
    - Decorative separator marked as aria-hidden
  
  @created 2025-01-15
#}

{% macro renderSectionContact(option) %}
  {# Import required molecules and atoms #}
  {% from "02-molecules/contact-block.njk" import renderContactBlock %}
  {% from "02-molecules/list-form.njk" import renderListForm %}
  {% from "01-atoms/heading.njk" import renderHeading %}
  {% from "01-atoms/button.njk" import renderButton %}

  {# Check if datas is provided #}
  {% if not option.datas %}
    <span>Error: No section-contact configuration provided</span>
  {% else %}
    {# Retrieve section-contact configuration #}
    {% set sectionsConfig = option.datas %}
    {% set sectionName = option.name %}
    
    {# Find the specific section by name #}
    {% set sectionData = null %}
    {% for section in sectionsConfig %}
      {% if section.name == sectionName %}
        {% set sectionData = section %}
      {% endif %}
    {% endfor %}

    {# Fallback if section not found #}
    {% if not sectionData %}
      <span>Section-contact not found: {{ sectionName }}</span>
    {% else %}
      {# Build CSS classes from section name #}
      {% set cssClasses = '' %}
      
      {# Add any additional classes #}
      {% if option.class %}
        {% set cssClasses = cssClasses ~ ' ' ~ option.class %}
      {% endif %}
      
      {# Section container with semantic structure and accessibility #}
      <section class="{{ cssClasses }}" id="contact" role="region" aria-labelledby="contact-heading">
        
        {# Section content with responsive padding and max-width #}
        <div>
          
          {# Section header with system gaps and proper heading hierarchy #}
          <header>
            <div id="contact-heading">
              {{ renderHeading({ 
                  name: sectionData.header.title,
                  datas: option.typographyDatas
              }) }}
            </div>
          </header>
          
          {# Section content container with reduced gaps #}
          <div>
            
            {# Contact information block - centered container with left-aligned text #}
            <div>
              <div>
                {{ renderContactBlock({ 
                    name: sectionData.content.contact_block,
                    datas: option.contactBlockDatas,
                    iconDatas: option.iconDatas,
                    typographyDatas: option.typographyDatas
                }) }}
              </div>
            </div>
            
            {# Horizontal separator with gradient #}
            <div role="separator" aria-hidden="true">
              <div></div>
            </div>
            
            {# Contact form with Netlify integration - Button included in form #}
            <div>
              {% set submitButtonHtml %}
                {{ renderButton({ 
                    name: sectionData.content.button,
                    datas: option.buttonDatas,
                    type: "submit"
                }) }}
              {% endset %}
              
              {{ renderListForm({ 
                  name: sectionData.content.form,
                  datas: option.listFormDatas,
                  radioDatas: option.radioDatas,
                  inputDatas: option.inputDatas,
                  netlify: true,
                  submitButton: submitButtonHtml | safe
              }) }}
            </div>
            
          </div>
          
        </div>
        
      </section>
    {% endif %}
  {% endif %}
{% endmacro %}

{#
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
May your bugs be forever exiled to the shadow realm ✦
Charlotte Carpentier · 2025
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#}