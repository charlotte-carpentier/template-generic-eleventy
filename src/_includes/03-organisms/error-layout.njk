{# ┌─────────────────────────────────────────────────────────┐
   │ ORGANISM › Error Layout                                 │
   │ Complete error page layout with fragments and triptych  │
   └─────────────────────────────────────────────────────────┘ #}

{#
  Props:
    - options.name (string): Error layout identifier
    - options.datas (array): Error layout configuration data
    - options.groupDatas (array): Error fragment group organism data
    - options.fragmentDatas (array): Error fragment molecule data
    - options.headingDatas (array): Heading atom data
    - options.buttonDatas (array): Button atom data
    - options.linkDatas (array): Link atom data
    - options.iconDatas (array): Icon atom data

  Usage — Summon HAT Components Wisely:
    {% from "03-organisms/error-layout.njk" import renderErrorLayout %}

    {{ renderErrorLayout({
        name: "layout404",
        datas: organisms["error-layout"].errorLayouts,
        groupDatas: organisms["error-fragment-group"].errorFragmentGroups,
        fragmentDatas: molecules["error-fragment"]["error-fragments"],
        headingDatas: atoms.heading.headings,
        buttonDatas: atoms.button.buttons,
        linkDatas: atoms.link.links,
        iconDatas: atoms.icon.icons
    }) }}

  @created 2025-01-15
#}

{% macro renderErrorLayout(options) %}
  {# Import sub-components #}
  {% from "03-organisms/error-fragment-group.njk" import renderErrorFragmentGroup %}
  {% from "02-molecules/error-fragment.njk" import renderErrorFragment %}
  {% from "01-atoms/heading.njk" import renderHeading %}
  {% from "01-atoms/button.njk" import renderButton %}
  {% from "01-atoms/link.njk" import renderLink %}

  {# Validate required props #}
  {% if not options.datas %}
    <span class="error" role="alert">Error: Missing required prop (datas)</span>
  {% elif not options.name %}
    <span class="error" role="alert">Error: Missing required prop (name)</span>
  {% else %}
    {# Find layout using universal filter #}
    {% set layoutData = options.datas | findByName(options.name) %}

    {# Render layout or error message #}
    {% if not layoutData %}
      <span class="error" role="alert">Error layout not found: {{ options.name }}</span>
    {% else %}
      {# Main error layout container - Full screen absolute positioning #}
      <div 
        data-error-layout-name="{{ layoutData.name }}"
        data-error-layout-type="error-layout"
        data-error-layout-variant="{{ layoutData.variant }}"
      >
        
        {# Desktop Layout - Cross formation with centered triptych #}
        <div data-error-layout-desktop>
          
          {# Fragment group - Covers entire space in cross formation #}
          <div data-error-layout-fragments>
            {{ renderErrorFragmentGroup({
                name: layoutData.groupName,
                datas: options.groupDatas,
                fragmentDatas: options.fragmentDatas,
                iconDatas: options.iconDatas,
                headingDatas: options.headingDatas
            }) }}
          </div>
          
          {# Triptych - Centered overlay (title + subtitle + CTA) #}
          <div data-error-layout-triptych>
            
            {# Title #}
            <div data-triptych-title>
              {{ renderHeading({
                  name: layoutData.titleTypographyName,
                  datas: options.headingDatas
              }) }}
            </div>
            
            {# Subtitle #}
            <div data-triptych-subtitle>
              {{ renderHeading({
                  name: layoutData.subtitleTypographyName,
                  datas: options.headingDatas
              }) }}
            </div>
            
            {# CTA - Link or Button #}
            <div data-triptych-cta>
              {% if layoutData.linkName %}
                {{ renderLink({
                    name: layoutData.linkName,
                    datas: options.linkDatas
                }) }}
              {% elif layoutData.buttonName %}
                {{ renderButton({
                    name: layoutData.buttonName,
                    datas: options.buttonDatas
                }) }}
              {% endif %}
            </div>
            
            {# Accessibility controls #}
            <div data-triptych-accessibility>
              
              {# Accessibility text #}
              <div data-a11y-text>
                {{ renderHeading({
                    name: layoutData.a11yTextName,
                    datas: options.headingDatas
                }) }}
              </div>
              
              {# Accessibility toggle button #}
              <div data-a11y-button>
                {{ renderButton({
                    name: layoutData.a11yBtnName,
                    datas: options.buttonDatas
                }) }}
              </div>
              
            </div>
            
          </div>
          
        </div>
        
        {# Mobile Layout - Vertical scrollable stack #}
        <div data-error-layout-mobile>
          
          {# Triptych first - Always visible at top #}
          <div data-error-layout-triptych-mobile>
            
            {# Title #}
            <div data-triptych-title>
              {{ renderHeading({
                  name: layoutData.titleTypographyName,
                  datas: options.headingDatas
              }) }}
            </div>
            
            {# Subtitle #}
            <div data-triptych-subtitle>
              {{ renderHeading({
                  name: layoutData.subtitleTypographyName,
                  datas: options.headingDatas
              }) }}
            </div>
            
            {# CTA #}
            <div data-triptych-cta>
              {% if layoutData.linkName %}
                {{ renderLink({
                    name: layoutData.linkName,
                    datas: options.linkDatas
                }) }}
              {% elif layoutData.buttonName %}
                {{ renderButton({
                    name: layoutData.buttonName,
                    datas: options.buttonDatas
                }) }}
              {% endif %}
            </div>
            
            {# Accessibility controls #}
            <div data-triptych-accessibility>
              <div data-a11y-text>
                {{ renderHeading({
                    name: layoutData.a11yTextName,
                    datas: options.headingDatas
                }) }}
              </div>
              <div data-a11y-button>
                {{ renderButton({
                    name: layoutData.a11yBtnName,
                    datas: options.buttonDatas
                }) }}
              </div>
            </div>
            
          </div>
          
          {# Fragments - Stacked vertically below triptych #}
          <div data-error-layout-fragments-mobile>
            {# Find fragment group to get fragment names #}
            {% set groupData = options.groupDatas | findByName(layoutData.groupName) %}
            
            {% if groupData and groupData.fragmentNames %}
              {% for fragmentName in groupData.fragmentNames %}
                <div 
                  data-fragment-mobile-item
                  data-fragment-index="{{ loop.index }}"
                >
                  {# Fragment 6 clickable logic #}
                  {% set isFragment6 = loop.index == 6 %}
                  {% if isFragment6 and not groupData.disableFragment6Click %}
                    <div 
                      tabindex="0" 
                      role="button" 
                      aria-label="Return to previous page or home"
                      data-fragment-clickable
                    >
                      {{ renderErrorFragment({
                          name: fragmentName,
                          datas: options.fragmentDatas,
                          iconDatas: options.iconDatas,
                          headingDatas: options.headingDatas
                      }) }}
                    </div>
                  {% else %}
                    {{ renderErrorFragment({
                        name: fragmentName,
                        datas: options.fragmentDatas,
                        iconDatas: options.iconDatas,
                        headingDatas: options.headingDatas
                    }) }}
                  {% endif %}
                </div>
              {% endfor %}
            {% endif %}
          </div>
          
        </div>
        
      </div>
    {% endif %}
  {% endif %}
{% endmacro %}

{#
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
May your bugs be forever exiled to the shadow realm ✦
Charlotte Carpentier · 2025
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#}