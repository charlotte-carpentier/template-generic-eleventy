{# ┌─────────────────────────────────────────────────────────┐
   │ ORGANISM › Error Fragment Group                         │
   │ Error fragments in 2x3 grid layout for error pages      │
   └─────────────────────────────────────────────────────────┘ #}

{#
  Props:
    - options.name (string): Error fragment group identifier
    - options.datas (array): Error fragment group configuration data
    - options.fragmentDatas (array): Error fragment molecule data
    - options.iconDatas (array): Icon atom data
    - options.headingDatas (array): Heading atom data

  Usage — Summon HAT Components Wisely:
    {% from "03-organisms/error-fragment-group.njk" import renderErrorFragmentGroup %}

    {{ renderErrorFragmentGroup({
        name: "errGroup404",
        datas: organisms["error-fragment-group"].errorFragmentGroups,
        fragmentDatas: molecules["error-fragment"]["error-fragments"],
        iconDatas: atoms.icon.icons,
        headingDatas: atoms.heading.headings
    }) }}

  @created 2025-01-15
#}

{% macro renderErrorFragmentGroup(options) %}
  {# Import sub-component #}
  {% from "02-molecules/error-fragment.njk" import renderErrorFragment %}

  {# Validate required props #}
  {% if not options.datas %}
    <span class="error" role="alert">Error: Missing required prop (datas)</span>
  {% elif not options.name %}
    <span class="error" role="alert">Error: Missing required prop (name)</span>
  {% else %}
    {# Find group using universal filter #}
    {% set groupData = options.datas | findByName(options.name) %}

    {# Render group or error message #}
    {% if not groupData %}
      <span class="error" role="alert">Error fragment group not found: {{ options.name }}</span>
    {% else %}
      {# Render grid container - 2x3 grid layout for error pages #}
      <div 
        data-error-group-name="{{ groupData.name }}"
        data-error-group-type="error-fragment-group"
        data-error-group-variant="{{ groupData.variant }}"
      >
        
        {# Loop through fragment names and render each #}
        {% for fragmentName in groupData.fragmentNames %}
          {# Calculate column position (left = even index, right = odd) #}
          {% set isLeftColumn = loop.index0 % 2 == 0 %}
          {# Fragment 6 is special - can be clickable #}
          {% set isFragment6 = loop.index == 6 %}
          
          <div 
            data-fragment-item
            data-fragment-position="{{ 'left' if isLeftColumn else 'right' }}"
            data-fragment-index="{{ loop.index }}"
          >
            
            {% if isFragment6 and not groupData.disableFragment6Click %}
              {# Fragment 6 - Clickable with ARIA for navigation back #}
              <div 
                tabindex="0" 
                role="button" 
                aria-label="Return to previous page or home"
                data-fragment-clickable
              >
                {{ renderErrorFragment({
                    name: fragmentName,
                    datas: options.fragmentDatas,
                    iconDatas: options.iconDatas,
                    headingDatas: options.headingDatas
                }) }}
              </div>
            {% else %}
              {# Regular fragment - Not clickable #}
              {{ renderErrorFragment({
                  name: fragmentName,
                  datas: options.fragmentDatas,
                  iconDatas: options.iconDatas,
                  headingDatas: options.headingDatas
              }) }}
            {% endif %}
            
          </div>
        {% endfor %}
        
      </div>
    {% endif %}
  {% endif %}
{% endmacro %}

{#
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
May your bugs be forever exiled to the shadow realm ✦
Charlotte Carpentier · 2025
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#}