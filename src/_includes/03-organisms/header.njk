{# ===========================================================
   @ORGANISMS - HEADER
   - Manages site header with brand, title and navigation
=========================================================== #}

{% macro renderHeader(option) %}
  {# Import required molecules and atoms #}
  {% from "02-molecules/tab-menu.njk" import renderTabMenu %}
  {% from "01-atoms/heading.njk" import renderTypography %}
  {% from "01-atoms/link.njk" import renderLink %}
  {% from "01-atoms/icon.njk" import renderIcon %}

  {# Check if datas is provided #}
  {% if not option.datas %}
    <span>Error: No header configuration provided</span>
  {% else %}
    {# Retrieve header configuration #}
    {% set headersConfig = option.datas %}
    {% set headerName = option.name %}
    
    {# Find the specific header by name #}
    {% set headerData = null %}
    {% for header in headersConfig %}
      {% if header.name == headerName %}
        {% set headerData = header %}
      {% endif %}
    {% endfor %}

    {# Fallback if header not found #}
    {% if not headerData %}
      <span>Header not found: {{ headerName }}</span>
    {% else %}
      {# Build CSS classes from header name #}
      {% set cssClasses = 'header' %}
      
      {# Add any additional classes #}
      {% if option.class %}
        {% set cssClasses = cssClasses ~ ' ' ~ option.class %}
      {% endif %}
      
      {# Header container #}
      <header class="{{ cssClasses }}" id="main-header">
        <div>
          
          {# Brand section - Logo typography #}
          <div>
            {{ renderTypography({ 
                name: headerData.brand.logo,
                datas: option.typographyDatas
            }) }}
          </div>
          
          {# Title section - Desktop only #}
          <div>
            {{ renderTypography({ 
                name: headerData.title.desktop,
                datas: option.typographyDatas
            }) }}
          </div>
          
          {# Navigation section - Desktop link #}
          <div>
            {{ renderLink({ 
                name: headerData.navigation.desktop_link,
                datas: option.linkDatas
            }) }}
          </div>
          
          {# Mobile burger button - Mobile uniquement #}
          <button 
            id="burger-toggle"
            aria-label="Toggle mobile menu"
            aria-expanded="false"
          >
            <span>
              {{ renderIcon({ 
                  name: headerData.mobile.burger_open_icon,
                  datas: option.iconDatas
              }) }}
            </span>
            <span>
              {{ renderIcon({ 
                  name: headerData.mobile.burger_close_icon,
                  datas: option.iconDatas
              }) }}
            </span>
          </button>
          
        </div>
        
        {# Mobile overlay menu - Mobile uniquement #}
        <div id="mobile-overlay">
          <div>
            {# Render the tab-menu mobile version inside overlay #}
            {{ renderTabMenu({ 
                name: headerData.navigation.mobile_menu,
                datas: option.tabMenuDatas,
                linkDatas: option.linkDatas
            }) }}
          </div>
        </div>
        
      </header>
    {% endif %}
  {% endif %}
{% endmacro %}

{# ===========================================================
   Summon HAT Components Wisely
-----------------------------------------------------------
1. Import the macro at the top of your page
{% from "03-organisms/header.njk" import renderHeader %}

2. Call the header
{{ renderHeader({ 
    name: "charlotte_header",
    datas: organisms.header.headers,
    typographyDatas: atoms.typography.texts,
    tabMenuDatas: molecules["tab-menu"].tab_menus,
    linkDatas: atoms.link.links,
    iconDatas: atoms.icon.icons
}) }}

May your bugs be forever exiled to the shadow realm. üßô‚Äç‚ôÇÔ∏è‚ú®
=========================================================== #}