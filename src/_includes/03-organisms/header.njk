{# ┌─────────────────────────────────────────────────────────┐
   │ ORGANISM › Header                                       │
   │ Site header with responsive desktop/mobile navigation   │
   └─────────────────────────────────────────────────────────┘ #}

{#
  Props:
    - options.name (string): Header identifier
    - options.datas (array): Header configuration data
    - options.vectorDatas (array): Vector atom data
    - options.iconDatas (array): Icon atom data
    - options.tabBarDatas (array): Tab bar organism data
    - options.linkDatas (array): Link atom data

  Usage — Summon HAT Components Wisely:
    {% from "03-organisms/header.njk" import renderHeader %}

    {{ renderHeader({
        name: "demoHeader1",
        datas: organisms.header.headers,
        vectorDatas: atoms.vector.vectors,
        iconDatas: atoms.icon.icons,
        tabBarDatas: organisms["tab-bar"].tabBars,
        linkDatas: atoms.link.links
    }) }}

  @created 2025-01-15
#}

{% macro renderHeader(options) %}
  {# Import sub-components #}
  {% from "01-atoms/vector.njk" import renderVector %}
  {% from "01-atoms/icon.njk" import renderIcon %}
  {% from "03-organisms/tab-bar.njk" import renderTabBar %}

  {# Validate required props #}
  {% if not options.datas %}
    <span class="error" role="alert">Error: Missing required prop (datas)</span>
  {% elif not options.name %}
    <span class="error" role="alert">Error: Missing required prop (name)</span>
  {% else %}
    {# Find header using universal filter - Performance: O(n/2) average with early return #}
    {% set headerData = options.datas | findByName(options.name) %}

    {# Render header or error message #}
    {% if not headerData %}
      <span class="error" role="alert">Header not found: {{ options.name }}</span>
    {% else %}
      {# Render header element #}
      <header 
        id="main-header"
        aria-label="{{ headerData.ariaLabel }}"
        data-header-name="{{ headerData.name }}"
        data-header-type="header"
      >
        
        <div data-header-container>
          
          {# Desktop branding - Vector logo #}
          <div data-header-section="desktop-branding">
            {{ renderVector({
                name: headerData.desktop.vectorName,
                datas: options.vectorDatas
            }) }}
          </div>
          
          {# Desktop navigation - Tab bar #}
          <div data-header-section="desktop-navigation">
            {{ renderTabBar({
                name: headerData.desktop.tabBarName,
                datas: options.tabBarDatas,
                linkDatas: options.linkDatas
            }) }}
          </div>
          
          {# Mobile burger button - WCAG 2.2 AA compliant #}
          <button 
            id="burger-toggle"
            type="button"
            aria-label="Toggle mobile menu"
            aria-expanded="false"
            aria-controls="mobile-overlay"
            data-header-burger
          >
            {# Burger open icon #}
            <span data-burger-icon="open">
              {{ renderIcon({
                  name: headerData.mobile.burgerOpenIcon,
                  datas: options.iconDatas
              }) }}
            </span>
            
            {# Burger close icon #}
            <span data-burger-icon="close">
              {{ renderIcon({
                  name: headerData.mobile.burgerCloseIcon,
                  datas: options.iconDatas
              }) }}
            </span>
          </button>
          
        </div>
        
        {# Mobile overlay menu - Conditional render based on JSON config #}
        {% if headerData.mobile.overlay %}
          <div 
            id="mobile-overlay"
            data-header-overlay
            aria-hidden="true"
          >
            <div data-overlay-content>
              
              {# Mobile branding #}
              <div data-overlay-section="branding">
                {{ renderVector({
                    name: headerData.mobile.vectorName,
                    datas: options.vectorDatas
                }) }}
              </div>
              
              {# Mobile navigation - Same tab bar data, different presentation #}
              <div data-overlay-section="navigation">
                {{ renderTabBar({
                    name: headerData.desktop.tabBarName,
                    datas: options.tabBarDatas,
                    linkDatas: options.linkDatas
                }) }}
              </div>
              
            </div>
          </div>
        {% endif %}
        
      </header>
    {% endif %}
  {% endif %}
{% endmacro %}

{#
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
May your bugs be forever exiled to the shadow realm ✦
Charlotte Carpentier · 2025
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#}